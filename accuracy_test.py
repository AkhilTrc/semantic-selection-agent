import os
import openai
from openai import OpenAI
from load_dotenv import load_dotenv

from testing import count_unique_elements_in_folder

load_dotenv()
API_KEY = os.getenv("OPENAI_API_KEY")
if not API_KEY:
    raise ValueError("OPENAI_API_KEY environment variable not set.")
client = OpenAI(api_key=API_KEY)

fine_tuned_model = "ft:gpt-4o-mini-2024-07-18:personal::Bqz4zkax"       # change to your fine-tuned model

def is_official_element(element_name):
    prompt = f"Is '{element_name}' an official element in Little Alchemy 2?"
    response = openai.chat.completions.create(
        model=fine_tuned_model,
        messages=[{"role": "user", "content": prompt}]
    )
    answer = response.choices[0].message.content.strip().lower()
    return answer.startswith("yes")

def tp_fp_prec(folder_path):
    # Example: elements generated by another LLM
    candidate_elements = count_unique_elements_in_folder(folder_path)         # change to elements created

    results = []
    for elem in candidate_elements:
        is_official = is_official_element(elem)
        results.append({"element": elem, "is_official": is_official})

    # Calculate metrics
    tp = sum(r["is_official"] for r in results)
    fp = len(results) - tp
    precision = tp / (tp + fp) if (tp + fp) else 0

    print(f"Precision: {precision:.2f}")

if __name__ == "__main__":
    folder_path = "inventory_jsons_v5"
    tp_fp_prec(folder_path)
